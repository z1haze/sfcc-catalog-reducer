/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
importPackage( dw.system );
importPackage( dw.io );
importPackage( dw.util );


function execute( args : PipelineDictionary ) : Number
{
	
	/** Setup variables for the catalog zip and deletion */

	var log : Logger = Logger.getLogger("BCM","");	
    var catalog : File = new File(File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR + "catalog" + File.SEPARATOR + "reduced-catalog" + File.SEPARATOR );
    var catalogFileList : List = catalog.listFiles();
  	var catalogZip : File = new File(File.IMPEX + File.SEPARATOR + "src" + File.SEPARATOR + "catalog" + File.SEPARATOR + "reduced_catalog.zip");
  
	
	
	try {
		
		/** Checking if the directory exists */
		var exists : boolean = catalog.exists();
			if(exists){
				/** Zipping the directory */
				catalog.zip(catalogZip);
				
					var e;
					for each(e in catalogFileList){
						/** Removing each file in the directory */
						e.remove();	
					}
		/** Deleting directory folder */			
		catalog.remove();
		return PIPELET_NEXT;
		
				} else {
					/** If the directory doesn't exist, move forward */	
					return PIPELET_NEXT;
			}
				} catch(e)	{
		return PIPELET_ERROR;
	}
	

  
}
