/**
* CreateCatalogReducerCO Script
* This is a basic test script to create a Catalog Reducer Definition CO
*
*	@input NumberOfProducts : Number
*	@input OnlineProducts : Boolean
*	@input ProductIDs : String
*	@input ExportMethod : String
*   @output CatalogReducerInfo : Object
*
*/
importPackage( dw.system );
importPackage( dw.object );
importPackage( dw.util );

function execute( args : PipelineDictionary ) : Number
{
	
	var numberofproducts : Number = args.NumberOfProducts;
	var onlineproducts : Boolean = args.OnlineProducts;
	var productids : String = args.ProductIDs;
	var expmethod : String = args.ExportMethod;
	
	var log : Logger = Logger.getLogger("BCM2","");
	log.error("Searching for previous custom objects");
	
	var prevCOs : SeekableIterator = CustomObjectMgr.getAllCustomObjects("CatalogReducerDefinition");
	while (prevCOs.hasNext()) {
		log.error("Found previous custom object");
		var prevCO : CustomObject = prevCOs.next();
		CustomObjectMgr.remove(prevCO);
		log.error("Deleted previous custom object");
	}

    var co : CustomObject = CustomObjectMgr.createCustomObject("CatalogReducerDefinition", "CatalogReducerInfo");
    log.error("Created new custom object");
    
    co.custom.numberProducts = numberofproducts;
    co.custom.onlineProducts = onlineproducts;
    co.custom.productIDs = productids;
    co.custom.expMethod = expmethod;
    
    args.CatalogReducerInfo = co;

   	return PIPELET_NEXT;
}
