/**
* CreateCatalogReducerCO Script
* This is a basic test script to create a Catalog Reducer Definition CO
*
*	@input NumberOfProducts : Number
*	@input OnlineProducts : Boolean
*	@input ProductIDs : String
*	@input MasterCatalog : String
*	@input StorefrontCatalog : String
*   @output CatalogReducerInfo : Object
*
*/
importPackage( dw.system );
importPackage( dw.object );
importPackage( dw.util );

function execute( args : PipelineDictionary ) : Number
{
	
	var numberofproducts : Number = args.NumberOfProducts;
	var onlineproducts : Boolean = args.OnlineProducts;
	var productids : String = args.ProductIDs;
	var mastercat : String = args.MasterCatalog;
	var storefrontcat : String = args.StorefrontCatalog;
	
	var log : Logger = Logger.getLogger("CatalogReducer","");
	log.error("Searching for previous custom objects");
	
	var prevCOs : SeekableIterator = CustomObjectMgr.getAllCustomObjects("CatalogReducerDefinition");
	while (prevCOs.hasNext()) {
		log.error("Found previous custom object");
		var prevCO : CustomObject = prevCOs.next();
		CustomObjectMgr.remove(prevCO);
		log.error("Deleted previous custom object");
	}
	
	prevCOs.close();

    var co : CustomObject = CustomObjectMgr.createCustomObject("CatalogReducerDefinition", "CatalogReducerInfo");
    log.error("Created new custom object");
    
    co.custom.numberProducts = numberofproducts;
    co.custom.onlineProducts = onlineproducts;
    co.custom.productIDs = productids;
    co.custom.masterCatalogs = mastercat;
    co.custom.storefrontCatalog = storefrontcat;
    co.custom.running = true; //mark CO as running
    co.custom.progress = 10; //mark export at 10 percent progression
    
    args.CatalogReducerInfo = co;

   	return PIPELET_NEXT;
}